/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import MainClasses.Controller;
import java.io.File;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author xbarn
 */

public class Conexions_table extends javax.swing.JFrame {
    //Aquesta es la variable on guardarem tots els noms de les columnes per la JTABLE de les conexions. 
    private String[] nomColumnes = {"IP", "Country", "City", "Date"};
    private Controller contr;
    //This object will contain the data for the table
    private Object data[][];
    public Controller getContr() {
        return contr;
    }

    public void setContr(Controller contr) {
        this.contr = contr;
    }
    
    public Conexions_table() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        jtf_fromDate = new javax.swing.JTextField();
        javax.swing.JButton btn_getData = new javax.swing.JButton();
        javax.swing.JButton btn_export = new javax.swing.JButton();
        javax.swing.JButton btn_block_IP = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.black);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jTable1.setBackground(new java.awt.Color(0, 0, 0));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "IP", "Country", "City", "Date"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("From Date:");

        btn_getData.setForeground(new java.awt.Color(0, 0, 0));
        btn_getData.setIcon(new javax.swing.ImageIcon("C:\\Users\\xbarn\\Documents\\IOC\\Projecte\\Imatges\\icones\\flecha-hacia-abajo.png")); // NOI18N
        btn_getData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_getDataActionPerformed(evt);
            }
        });

        btn_export.setForeground(new java.awt.Color(0, 0, 0));
        btn_export.setIcon(new javax.swing.ImageIcon("C:\\Users\\xbarn\\Documents\\IOC\\Projecte\\Imatges\\icones\\exportar.png")); // NOI18N
        btn_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exportActionPerformed(evt);
            }
        });

        btn_block_IP.setForeground(new java.awt.Color(0, 0, 0));
        btn_block_IP.setIcon(new javax.swing.ImageIcon("C:\\Users\\xbarn\\Documents\\IOC\\Projecte\\Imatges\\icones\\cerrar.png")); // NOI18N
        btn_block_IP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_block_IPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1233, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtf_fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_getData, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_export, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_block_IP, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jtf_fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_getData, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_export, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_block_IP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Butó per rebre les dades de l'api.
    private void btn_getDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_getDataActionPerformed
       
        //Get the date to filter the result from the textfield
        String dateToFilter = getDateFilter();

        //Call the controller method to get the connections. 
        data = this.contr.getConnections(dateToFilter);
        DefaultTableModel df = new DefaultTableModel(data,this.nomColumnes);
        this.jTable1.setModel(df);
    }//GEN-LAST:event_btn_getDataActionPerformed
    // Butó per exportar les dades a on indiqui l'user. 
    private void btn_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exportActionPerformed
       try{
            String pathToFile = "";

            if (jTable1.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "NO DATA TO EXPORT", "DATA IS NULL", JOptionPane.INFORMATION_MESSAGE);
            } else {
                Export_form cf = new Export_form(data);
                cf.show();
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_btn_exportActionPerformed
    //Butó per bloquejar ip
    private void btn_block_IPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_block_IPActionPerformed

        String IP = "";
        //Si no han seleccionat cap ip, la demanem (escrita)     
        if (this.jTable1.getSelectionModel().isSelectionEmpty()) {
            Question_Frame quest = new Question_Frame("Quina direccio IP vols bloquejar?");
            IP = quest.getAnswer();
        } else {
            //n'hi ha una escollida, per tant la onplim al option panel
            String preSelected = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
            Question_Frame quest = new Question_Frame("Quina direccio IP vols bloquejar?", preSelected);
            IP = quest.getAnswer();
        }
        if (!IP.equals("")) {
            BlackList_frame blf = new BlackList_frame(IP);
        }

    }//GEN-LAST:event_btn_block_IPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conexions_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conexions_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conexions_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conexions_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conexions_table().setVisible(true);
            }
        });
    }

    /**
     * Aquest mètode retorna la data del textfield per la data.
     *
     * @return un string amb la data formatada.
     */
    public String getDateFilter() {

        String fromDate = jtf_fromDate.getText();

        if (fromDate.equals("")) {
            return (new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString());
        } else {
            return fromDate;
        }
    }

    /**
     * Aquest mètode agafarà les dades de les conexions i crearà un fitxer.
     *
     * @param pathDestination amb la path a la que guardar el fitxer.
     */
    public void createCSV(String pathDestination) {

        //Guardarà el fitxer amb aquest nom
        String fileName = getFilename();
        System.out.println(fileName);

        //Crearem el fitxer i afegirem la capçalera
        try (PrintWriter writer = new PrintWriter(new File(pathDestination + "\\" + fileName))) {

            StringBuilder sb = new StringBuilder();
            for (String element : nomColumnes) {
                sb.append(element);
                sb.append(',');
            }
            sb.append('\n');
            //Per cada element, afegirem una linea (conexio) 
            for (int i = 0; i < data.length; i++) {
                for (int j = 0; j < data[i].length; j++) {

                    sb.append(data[i][j]);
                }
                sb.append('\n');
            }
            writer.write(sb.toString());

        } catch (Exception e) {
        }
    }

    
     /**
     * Aquest mètode retornà el nom del fitxer amb la data i hora actual ( assegurem que no existeixi ja).
     * mostra els païssos que han fet una connexió. 
     * @return string amb el nom del firxer.
     */
    public String getFilename() {

        return "Export_" + (new Date().toString().replaceAll(":", "")).replaceAll(" ", "") + ".csv";

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable jTable1;
    javax.swing.JTextField jtf_fromDate;
    // End of variables declaration//GEN-END:variables
}
